// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	musicsportsheaddevv1 "github.com/refat75/k8s-crd/pkg/apis/music.sportshead.dev/v1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// SongLister helps list Songs.
// All objects returned here must be treated as read-only.
type SongLister interface {
	// List lists all Songs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*musicsportsheaddevv1.Song, err error)
	// Songs returns an object that can list and get Songs.
	Songs(namespace string) SongNamespaceLister
	SongListerExpansion
}

// songLister implements the SongLister interface.
type songLister struct {
	listers.ResourceIndexer[*musicsportsheaddevv1.Song]
}

// NewSongLister returns a new SongLister.
func NewSongLister(indexer cache.Indexer) SongLister {
	return &songLister{listers.New[*musicsportsheaddevv1.Song](indexer, musicsportsheaddevv1.Resource("song"))}
}

// Songs returns an object that can list and get Songs.
func (s *songLister) Songs(namespace string) SongNamespaceLister {
	return songNamespaceLister{listers.NewNamespaced[*musicsportsheaddevv1.Song](s.ResourceIndexer, namespace)}
}

// SongNamespaceLister helps list and get Songs.
// All objects returned here must be treated as read-only.
type SongNamespaceLister interface {
	// List lists all Songs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*musicsportsheaddevv1.Song, err error)
	// Get retrieves the Song from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*musicsportsheaddevv1.Song, error)
	SongNamespaceListerExpansion
}

// songNamespaceLister implements the SongNamespaceLister
// interface.
type songNamespaceLister struct {
	listers.ResourceIndexer[*musicsportsheaddevv1.Song]
}
